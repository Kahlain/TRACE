{"ast":null,"code":"var _jsxFileName = \"/Users/mokahlain/Documents/GitHub/TRACE/src/components/FrameworkWheel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WheelContainer = styled.div`\n  position: relative;\n  width: 600px;\n  height: 600px;\n  margin: 0 auto;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n    height: auto;\n    aspect-ratio: 1 / 1;\n  }\n`;\n_c = WheelContainer;\nconst WheelContent = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-image: url('/inocta-trace-graph.svg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n`;\n_c2 = WheelContent;\nconst ClickArea = styled.div`\n  position: absolute;\n  cursor: pointer;\n  z-index: 2;\n\n  &.top {\n    top: 0;\n    left: 35%;\n    width: 30%;\n    height: 25%;\n  }\n\n  &.right {\n    top: 35%;\n    right: 0;\n    width: 25%;\n    height: 30%;\n  }\n\n  &.bottom {\n    bottom: 0;\n    left: 35%;\n    width: 30%;\n    height: 25%;\n  }\n\n  &.left {\n    top: 35%;\n    left: 0;\n    width: 25%;\n    height: 30%;\n  }\n\n  &.center {\n    top: 40%;\n    left: 40%;\n    width: 20%;\n    height: 20%;\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n_c3 = ClickArea;\nconst Tooltip = styled.div`\n  position: absolute;\n  background: white;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #2c3e50;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  pointer-events: none;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: opacity 0.2s ease;\n  z-index: 4;\n  white-space: nowrap;\n  \n  ${props => {\n  switch (props.position) {\n    case 'top':\n      return `\n          bottom: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n    case 'right':\n      return `\n          left: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        `;\n    case 'bottom':\n      return `\n          top: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n    case 'left':\n      return `\n          right: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        `;\n    case 'center':\n      return `\n          top: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n    default:\n      return '';\n  }\n}}\n`;\n_c4 = Tooltip;\nconst sections = [{\n  id: 'teams',\n  position: 'top',\n  title: 'Teams and Agents Alignment Structure',\n  objective: 'Ensure that human teams and AI agents, including bot agents, are structured to optimize both creativity and efficiency. AI agents should work as integral team members, alongside human teams.',\n  goal: 'Leverage AI in talent acquisition, development, and collaboration. Humans and AI should work seamlessly to drive innovation.',\n  keyQuestion: 'Is our team structure set up to fully utilize both human and AI capabilities?'\n}, {\n  id: 'resources',\n  position: 'right',\n  title: 'Resources and The Corpus of Knowledge',\n  objective: 'Organize and curate company data to maximize AI\\'s potential, providing a clear understanding of team and resource structures, which drives the business direction and helps shape subsequent orchestration efforts.',\n  goal: 'Fuel AI to deliver smarter and more impactful outcomes while also engaging customers more deeply.',\n  keyQuestion: 'Is our knowledge structured to support AI-driven solutions and customer experiences?'\n}, {\n  id: 'execution',\n  position: 'bottom',\n  title: 'Execution Infrastructure and Tech Architecture',\n  objective: 'Design scalable infrastructure that supports both AI development and business goals.',\n  goal: 'Efficient and adaptable execution for the smooth integration of AI solutions.',\n  keyQuestion: 'How well is our tech infrastructure prepared for AI-driven execution?'\n}, {\n  id: 'actions',\n  position: 'left',\n  title: 'Actions and Orchestrations Planning',\n  objective: 'Streamline operational processes to facilitate collaboration between AI and human-driven initiatives, ensuring that these processes are aligned with business goals and providing clarity on their impact on the Profit & Loss (P&L) statement.',\n  goal: 'Establish workflows that facilitate AI integration while keeping alignment with business goals.',\n  keyQuestion: 'Are our processes optimized to drive AI initiatives efficiently?'\n}];\nconst centerSection = {\n  id: 'compliance',\n  title: 'Compliance and Alignment',\n  objective: 'Ensure that ethical, regulatory, Operational Guardrails and security standards are integrated into AI development, providing the company with a comprehensive understanding of the requirements before moving into execution.',\n  goal: 'Compliance with industry standards safeguards trust and ensures accountability.',\n  keyQuestion: 'Are our AI efforts aligned with ethical standards and industry regulations?'\n};\nfunction FrameworkWheel({\n  onComponentSelect\n}) {\n  _s();\n  const [hoveredSection, setHoveredSection] = useState(null);\n  const handleMouseEnter = section => {\n    setHoveredSection(section);\n  };\n  const handleMouseLeave = () => {\n    setHoveredSection(null);\n  };\n  return /*#__PURE__*/_jsxDEV(WheelContainer, {\n    children: /*#__PURE__*/_jsxDEV(WheelContent, {\n      children: [/*#__PURE__*/_jsxDEV(ClickArea, {\n        className: \"center\",\n        onClick: () => onComponentSelect(centerSection),\n        onMouseEnter: () => handleMouseEnter(centerSection),\n        onMouseLeave: handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: hoveredSection === centerSection,\n          position: \"center\",\n          children: centerSection.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), sections.map(section => /*#__PURE__*/_jsxDEV(ClickArea, {\n        className: section.position,\n        onClick: () => onComponentSelect(section),\n        onMouseEnter: () => handleMouseEnter(section),\n        onMouseLeave: handleMouseLeave,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: hoveredSection === section,\n          position: section.position,\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, section.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(FrameworkWheel, \"pBad2c5RIfYhhLx44ei5/SI+Jgo=\");\n_c5 = FrameworkWheel;\nexport default FrameworkWheel;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"WheelContainer\");\n$RefreshReg$(_c2, \"WheelContent\");\n$RefreshReg$(_c3, \"ClickArea\");\n$RefreshReg$(_c4, \"Tooltip\");\n$RefreshReg$(_c5, \"FrameworkWheel\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","WheelContainer","div","_c","WheelContent","_c2","ClickArea","_c3","Tooltip","props","isVisible","position","_c4","sections","id","title","objective","goal","keyQuestion","centerSection","FrameworkWheel","onComponentSelect","_s","hoveredSection","setHoveredSection","handleMouseEnter","section","handleMouseLeave","children","className","onClick","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","map","_c5","$RefreshReg$"],"sources":["/Users/mokahlain/Documents/GitHub/TRACE/src/components/FrameworkWheel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst WheelContainer = styled.div`\n  position: relative;\n  width: 600px;\n  height: 600px;\n  margin: 0 auto;\n  \n  @media (max-width: 768px) {\n    width: 100%;\n    height: auto;\n    aspect-ratio: 1 / 1;\n  }\n`;\n\nconst WheelContent = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-image: url('/inocta-trace-graph.svg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: contain;\n`;\n\nconst ClickArea = styled.div`\n  position: absolute;\n  cursor: pointer;\n  z-index: 2;\n\n  &.top {\n    top: 0;\n    left: 35%;\n    width: 30%;\n    height: 25%;\n  }\n\n  &.right {\n    top: 35%;\n    right: 0;\n    width: 25%;\n    height: 30%;\n  }\n\n  &.bottom {\n    bottom: 0;\n    left: 35%;\n    width: 30%;\n    height: 25%;\n  }\n\n  &.left {\n    top: 35%;\n    left: 0;\n    width: 25%;\n    height: 30%;\n  }\n\n  &.center {\n    top: 40%;\n    left: 40%;\n    width: 20%;\n    height: 20%;\n  }\n\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  background: white;\n  padding: 8px 12px;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #2c3e50;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  pointer-events: none;\n  opacity: ${props => props.isVisible ? 1 : 0};\n  visibility: ${props => props.isVisible ? 'visible' : 'hidden'};\n  transition: opacity 0.2s ease;\n  z-index: 4;\n  white-space: nowrap;\n  \n  ${props => {\n    switch (props.position) {\n      case 'top':\n        return `\n          bottom: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n      case 'right':\n        return `\n          left: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        `;\n      case 'bottom':\n        return `\n          top: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n      case 'left':\n        return `\n          right: 100%;\n          top: 50%;\n          transform: translateY(-50%);\n        `;\n      case 'center':\n        return `\n          top: 100%;\n          left: 50%;\n          transform: translateX(-50%);\n        `;\n      default:\n        return '';\n    }\n  }}\n`;\n\nconst sections = [\n  { \n    id: 'teams', \n    position: 'top',\n    title: 'Teams and Agents Alignment Structure',\n    objective: 'Ensure that human teams and AI agents, including bot agents, are structured to optimize both creativity and efficiency. AI agents should work as integral team members, alongside human teams.',\n    goal: 'Leverage AI in talent acquisition, development, and collaboration. Humans and AI should work seamlessly to drive innovation.',\n    keyQuestion: 'Is our team structure set up to fully utilize both human and AI capabilities?'\n  },\n  { \n    id: 'resources', \n    position: 'right',\n    title: 'Resources and The Corpus of Knowledge',\n    objective: 'Organize and curate company data to maximize AI\\'s potential, providing a clear understanding of team and resource structures, which drives the business direction and helps shape subsequent orchestration efforts.',\n    goal: 'Fuel AI to deliver smarter and more impactful outcomes while also engaging customers more deeply.',\n    keyQuestion: 'Is our knowledge structured to support AI-driven solutions and customer experiences?'\n  },\n  { \n    id: 'execution', \n    position: 'bottom',\n    title: 'Execution Infrastructure and Tech Architecture',\n    objective: 'Design scalable infrastructure that supports both AI development and business goals.',\n    goal: 'Efficient and adaptable execution for the smooth integration of AI solutions.',\n    keyQuestion: 'How well is our tech infrastructure prepared for AI-driven execution?'\n  },\n  { \n    id: 'actions', \n    position: 'left',\n    title: 'Actions and Orchestrations Planning',\n    objective: 'Streamline operational processes to facilitate collaboration between AI and human-driven initiatives, ensuring that these processes are aligned with business goals and providing clarity on their impact on the Profit & Loss (P&L) statement.',\n    goal: 'Establish workflows that facilitate AI integration while keeping alignment with business goals.',\n    keyQuestion: 'Are our processes optimized to drive AI initiatives efficiently?'\n  }\n];\n\nconst centerSection = {\n  id: 'compliance',\n  title: 'Compliance and Alignment',\n  objective: 'Ensure that ethical, regulatory, Operational Guardrails and security standards are integrated into AI development, providing the company with a comprehensive understanding of the requirements before moving into execution.',\n  goal: 'Compliance with industry standards safeguards trust and ensures accountability.',\n  keyQuestion: 'Are our AI efforts aligned with ethical standards and industry regulations?'\n};\n\nfunction FrameworkWheel({ onComponentSelect }) {\n  const [hoveredSection, setHoveredSection] = useState(null);\n\n  const handleMouseEnter = (section) => {\n    setHoveredSection(section);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredSection(null);\n  };\n\n  return (\n    <WheelContainer>\n      <WheelContent>\n        <ClickArea \n          className=\"center\"\n          onClick={() => onComponentSelect(centerSection)}\n          onMouseEnter={() => handleMouseEnter(centerSection)}\n          onMouseLeave={handleMouseLeave}\n        >\n          <Tooltip \n            isVisible={hoveredSection === centerSection}\n            position=\"center\"\n          >\n            {centerSection.title}\n          </Tooltip>\n        </ClickArea>\n        {sections.map((section) => (\n          <ClickArea\n            key={section.id}\n            className={section.position}\n            onClick={() => onComponentSelect(section)}\n            onMouseEnter={() => handleMouseEnter(section)}\n            onMouseLeave={handleMouseLeave}\n          >\n            <Tooltip \n              isVisible={hoveredSection === section}\n              position={section.position}\n            >\n              {section.title}\n            </Tooltip>\n          </ClickArea>\n        ))}\n      </WheelContent>\n    </WheelContainer>\n  );\n}\n\nexport default FrameworkWheel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,cAAc;AAapB,MAAMG,YAAY,GAAGN,MAAM,CAACI,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GARID,YAAY;AAUlB,MAAME,SAAS,GAAGR,MAAM,CAACI,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GA3CID,SAAS;AA6Cf,MAAME,OAAO,GAAGV,MAAM,CAACI,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaO,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,CAAC,GAAG,CAAC;AAC7C,gBAAgBD,KAAK,IAAIA,KAAK,CAACC,SAAS,GAAG,SAAS,GAAG,QAAQ;AAC/D;AACA;AACA;AACA;AACA,IAAID,KAAK,IAAI;EACT,QAAQA,KAAK,CAACE,QAAQ;IACpB,KAAK,KAAK;MACR,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,OAAO;MACV,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,QAAQ;MACX,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,MAAM;MACT,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH,KAAK,QAAQ;MACX,OAAO;AACf;AACA;AACA;AACA,SAAS;IACH;MACE,OAAO,EAAE;EACb;AACF,CAAC;AACH,CAAC;AAACC,GAAA,GAnDIJ,OAAO;AAqDb,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}